<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="mybatis.r9_mybatis">
   <!-- 로그인 처리 -->
   <select id="isMember" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM R9_MEMBER WHERE M_EMAIL=#{emailid} AND M_PWD=#{pwd}
   </select>
   
   <!-- 호스트넘버 가져오는 쿼리 -->
   <select id="adminhostNo" parameterType="java.util.Map" resultType="int">
		SELECT H_NO FROM R9_MEMBER M JOIN R9_HOST H ON M.M_NO = H.M_NO WHERE H_NO = (SELECT M_NO FROM R9_MEMBER WHERE M_EMAIL=#{emailid})
	</select>
   
   <!-- 회원가입 처리 -->
   <insert id="signOn" parameterType="java.util.Map">
      INSERT INTO R9_MEMBER VALUES(SEQ_R9_MEMBER.NEXTVAL,#{emailid}, null, null,null,null, #{signpwd}, #{name}, #{phonenumber}, sysdate )
   </insert>
   
   	<!-- 중복 아이디 체크 -->
    <select id="IdCheck" parameterType="java.util.Map" resultType="int" >
       SELECT COUNT(*) FROM R9_MEMBER WHERE M_EMAIL=#{emailid}
    </select>
    
    <!-- 카카오 아이디 연동 -->
    <update id="kakaoConnect" parameterType="java.util.Map">
    	UPDATE R9_MEMBER SET KAKAO=#{kakaoid} WHERE M_EMAIL=#{emailid} AND KAKAOID IS NULL
    </update>
    
    <!-- 카카오 로그인 -->
 	<select id="kakaoLogin" parameterType="java.util.Map" resultType="String">
 		SELECT M_EMAIL FROM R9_MEMBER WHERE KAKAO=#{kakaoid}
 	</select>
 	
 	<!-- 비밀번호 가져오기 -->
 	<select id="passEquals" parameterType="java.util.Map" resultType="String">
 		SELECT M_PWD FROM R9_MEMBER WHERE M_EMAIL=#{emailid} AND M_TEL=#{phonenumber}
 	</select>
 	
 	<!-- 모든 목록 불러오기 -->
 	<select id="selectList" parameterType="java.util.Map" resultType="Room9DTO">
 		SELECT * FROM R9_ROOM ORDER BY R_NO DESC
 	</select>
 	
 	<!-- 모임 상세페이지 목록 불러오기 -->
 	<select id="selectOne" parameterType="java.util.Map" resultType="Room9DTO">
 		SELECT * FROM R9_ROOM WHERE r_no=#{r_no}
 	</select>
 	
 	<update id="naverConnet" parameterType="java.util.Map" >
 		UPDATE R9_MEMBER set NAVER=#{naverid} WHERE M_EMAIL=#{naveremail} and NAVER is NULL
 	</update>
 	
 	<select id="naverLogin" parameterType="java.util.Map" resultType="String">
 		SELECT M_EMAIL FROM R9_MEMBER WHERE NAVER=#{naverid}
 	</select>
 	
 	<!-- 크롤링 데이터 리스트 불러오기 -->
 	<select id="crawlingList" resultType="CrawlingDataDTO">
 		SELECT * FROM CRAWLING_TABLE
 	</select>
 	
 	<!-- 예약 번호 뽑기 -->
 	<select id="resPull" parameterType="java.util.Map" resultType="String">
 		SELECT s_no FROM R9_MEMBER M JOIN R9_RESERVATION R ON M.M_NO = R.M_NO WHERE M_EMAIL=#{m_email}
 	</select>
 	
 	<!-- 멤버 정보 -->
 	<select id="userinfoSelectOne" parameterType="java.util.Map" resultType="Room9MemberDTO">		
 		SELECT * FROM R9_MEMBER WHERE M_EMAIL=#{m_email}
 	</select>
 	
 	<!-- 예약정보 뿌려주기 -->
 	<select id="ResSelectList" parameterType="java.util.Map" resultType="ReservationDataDTO">
 		SELECT MEM.*,RES.S_NO, ROOM.R_NAME, ROOM.R_ADDRESS, ROOM.R_MONEY FROM 
		R9_MEMBER MEM JOIN
		R9_RESERVATION RES ON
		MEM.M_NO = RES.M_NO  
		JOIN R9_ROOM ROOM 
		ON RES.R_NO = ROOM.R_NO 
		WHERE M_EMAIL=#{m_email}
 	</select>
 	
 	<update id="userInfoUpdate" parameterType="java.util.Map">
 		UPDATE R9_MEMBER SET m_pwd=#{changePwd} WHERE m_pwd=#{currentPwd} AND ${changePwd}=#{re_changePwd} AND M_EMAIL=#{m_email}
 	</update>
 	
	 	<!-- 공지사항리스트 -->
 	<select id="noticeList" parameterType="java.util.Map" resultType="NoticeDTO">
 		SELECT * FROM R9_NOTICE ORDER BY R_POSTDATE DESC
 	</select>
 	<!-- 공지사항 글작성 -->
	<insert id="noticeInsert" parameterType="java.util.Map">
		INSERT INTO R9_NOTICE(no,r_title,r_content,r_postdate) VALUES(SEQ_r9_notice.NEXTVAL,#{r_title},#{r_content},DEFAULT)
	</insert>
 	<!-- 공지사항 수정 -->
 	<update id="noticeUpdate" parameterType="java.util.Map">
 		UPDATE R9_NOTICE SET r_title=#{r_title} , r_content=#{r_content} WHERE no=#{no}
 	</update>
 	<!-- 공지사항 삭제 -->
 	<delete id="noticeDelete" parameterType="java.util.Map">
 		DELETE R9_NOTICE WHERE no=#{no}
 	</delete>
 	<!-- 공지사항 상세보기 -->
 	<select id="noticeselectOne" parameterType="java.util.Map" resultType="NoticeDTO">
 		SELECT * FROM R9_NOTICE WHERE no=#{no}
 	</select>
 	
 	
</mapper>